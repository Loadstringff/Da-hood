local player = game.Players.LocalPlayer local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))() local Window = OrionLib:MakeWindow({Name = "Thidsz Hub (New)", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"}) --[[ Name = - The name of the UI. HidePremium = - Whether or not the user details shows Premium status or not. SaveConfig = - Toggles the config saving in the UI. ConfigFolder = - The name of the folder where the configs are saved. IntroEnabled = false - Whether or not to show the intro animation. IntroText = - Text to show in the intro animation. IntroIcon = - URL to the image you want to use in the intro animation. Icon = - URL to the image you want displayed on the window. CloseCallback = - Function to execute when the window is closed. ]] local Tab = Window:MakeTab({ Name = "Tab 1", Icon = "rbxassetid://4483345998", PremiumOnly = false }) --[[ Name = - The name of the tab. Icon = - The icon of the tab. PremiumOnly = - Makes the tab accessible to Sirus Premium users only. ]] local Section = Tab:AddSection({ Name = "LocalPlayer" }) --[[ Name = - The name of the section. ]] OrionLib:MakeNotification({ Name = "Welcome!", Content = "Welcome to my hub!", Image = "rbxassetid://4483345998", Time = 5 }) --[[ Title = - The title of the notification. Content = - The content of the notification. Image = - The icon of the notification. Time = - The duration of the notfication. ]] Tab:AddButton({ Name = "High Speed", Callback = function() player.Character.Humanoid.WalkSpeed = 100 end }) --[[ Name = - The name of the button. Callback = - The function of the button. ]] Tab:AddButton({ Name = "High Jumppower", Callback = function() player.Character.Humanoid.JumpPower = 50 end }) --[[ Name = - The name of the button. Callback = - The function of the button. ]] Tab:AddButton({ Name = "Low Gravity", Callback = function() game.Workspace.Gravity = 10 end }) --[[ Name = - The name of the button. Callback = - The function of the button. ]] --[[ Name = - The name of the button. Callback = - The function of the button. ]]
   local function CreateESP(player)
    -- Check if the player is valid
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local BillboardGui = Instance.new("BillboardGui")
        BillboardGui.Name = "ESP"
        BillboardGui.Adornee = player.Character.HumanoidRootPart
        BillboardGui.Size = UDim2.new(2, 0, 2, 0)
        BillboardGui.StudsOffset = Vector3.new(0, 3, 0)
        BillboardGui.AlwaysOnTop = true

        local Frame = Instance.new("Frame")
        Frame.Size = UDim2.new(1, 0, 1, 0)
        Frame.BackgroundTransparency = 0.5
        Frame.BackgroundColor3 = Color3.new(1, 0, 0)
        Frame.Parent = BillboardGui

        BillboardGui.Parent = player.Character
    end
end

local function RemoveESP(player)
    if player.Character and player.Character:FindFirstChild("ESP") then
        player.Character:FindFirstChild("ESP"):Destroy()
    end
end

local function OnPlayerAdded(player)
    player.CharacterAdded:Connect(function()
        CreateESP(player)
    end)
end

for _, player in pairs(game.Players:GetPlayers()) do
    OnPlayerAdded(player)
    CreateESP(player)
end

game.Players.PlayerAdded:Connect(OnPlayerAdded)
game.Players.PlayerRemoving:Connect(RemoveESP)
local aimTarget = nil -- The player or object to lock onto
local aimEnabled = false -- Whether the aim-lock is active

local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = player:GetMouse()

-- Function to lock the camera onto a target
local function lockCameraToTarget(target)
    if target and target:FindFirstChild("HumanoidRootPart") then
        local targetPosition = target.HumanoidRootPart.Position
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
    end
end

-- Toggle aim-lock when pressing a key (e.g., "E")
mouse.KeyDown:Connect(function(key)
    if key == "e" then
        aimEnabled = not aimEnabled
        if aimEnabled then
            print("Aim-Lock Enabled")
        else
            print("Aim-Lock Disabled")
        end
    end
end)

-- Continuously update the camera if aim-lock is enabled
game:GetService("RunService").RenderStepped:Connect(function()
    if aimEnabled and aimTarget then
        lockCameraToTarget(aimTarget)
    end
end)

-- Set aimTarget to the closest player
mouse.Button2Down:Connect(function()
    local closestDistance = math.huge
    local closestPlayer = nil

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    if closestPlayer then
        aimTarget = closestPlayer.Character
        print("Locked onto:", closestPlayer.Name)
    end
end)
